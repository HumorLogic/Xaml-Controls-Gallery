<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<local:ItemsPageBase
    x:Class="AppUIBasics.ControlPages.ListViewPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppUIBasics"
    xmlns:data="using:AppUIBasics.Data"
    xmlns:local1="using:AppUIBasics.ControlPages">
    <Page.Resources>
        <DataTemplate x:Key="IconTextTemplate" x:DataType="data:ControlInfoDataItem">
            <RelativePanel>
                <Image x:Name="image" Height="36" Width="36" Margin="0,8,0,8" Source="{x:Bind ImagePath}" Stretch="UniformToFill" />
                <StackPanel Orientation="Vertical" VerticalAlignment="Top" Margin="8,8,0,0" RelativePanel.RightOf="image">
                    <TextBlock Text="{x:Bind Title}" Style="{StaticResource BaseTextBlockStyle}" />
                    <TextBlock Text="{x:Bind Subtitle}" Margin="0,4,8,0" Style="{StaticResource BodyTextBlockStyle}" />
                </StackPanel>
            </RelativePanel>
        </DataTemplate>
        <DataTemplate x:Key="ImageTextListMailFolderTemplate" x:DataType="data:ControlInfoDataItem">
            <Grid Margin="0,12,0,12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="550"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{x:Bind Title}" Margin="0,12,0,0" HorizontalAlignment="Left" TextWrapping="Wrap" />
            </Grid>
        </DataTemplate>

        <!-- Use a collection view source for content that presents itself as a list of items that can be grouped or sorted.  Otherwise, you can use x:Bind
        directly on the ListView's item source to for further optimization. Please see the AppUIBasics sample for an example of how to do this.  -->
        <CollectionViewSource x:Name="ContactsCVS" IsSourceGrouped="True" />

        <!-- When using x:Bind, you need to set x:DataType -->
        <DataTemplate x:Key="ContactListViewTemplate" x:DataType="local1:Contact">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Ellipse x:Name="Ellipse"
                         Grid.RowSpan="2"
                         Width ="32"
                         Height="32"
                         Margin="6"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"
                         Fill="Gray"/>
                <TextBlock Grid.Column="1"
                           Text="{x:Bind Name}"
                           x:Phase="1"
                           Style="{ThemeResource BaseTextBlockStyle}"
                           Margin="12,6,0,0"/>
                <TextBlock  Grid.Column="1"
                            Grid.Row="1"
                            Text="{x:Bind Company}"
                            x:Phase="2"
                            Style="{ThemeResource BodyTextBlockStyle}"
                            Margin="12,0,0,6"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ContactListViewTemplate2" x:DataType="local1:Contact">
            <TextBlock Text="{x:Bind Name}" x:Phase="1" Margin="0,5,0,5"/>
        </DataTemplate>
        
    </Page.Resources>
    <StackPanel>
        <local:ControlExample HeaderText="A Simple ListView with Selection support">
            <ListView
                x:Name="Control2"
                CanDragItems="True"
                CanReorderItems="True"
                AllowDrop="True"
                BorderThickness="1"
                BorderBrush="DimGray"
                MinWidth="550" 
                Height="400"/>
            <local:ControlExample.Options>
                <StackPanel>
                    <ComboBox SelectionChanged="SelectionModeComboBox_SelectionChanged" Header="SelectionMode"
                        SelectedIndex="1" Margin="0,12,0,0">
                        <x:String>None</x:String>
                        <x:String>Single</x:String>
                        <x:String>Multiple</x:String>
                        <x:String>Extended</x:String>
                    </ComboBox>
                </StackPanel>
            </local:ControlExample.Options>

            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;ListView CanDragItems="True" CanReorderItems="True" AllowDrop="True"
    SelectionMode="$(SelectionMode)" /&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution Key="SelectionMode" Value="{x:Bind Control2.SelectionMode, Mode=OneWay}"/>
            </local:ControlExample.Substitutions>
        </local:ControlExample>
        
        
        <local:ControlExample HeaderText="Basic ListView with Simple DataTemplate">
            <StackPanel>
                <TextBlock Margin="0 0 0 15">
                    This is a basic ListView that has the full source code below. <LineBreak/>Other samples on this page display only the additional markup needed to customize the specific ListView.
                </TextBlock>
                <ListView
                x:Name="BaseExample"
                ItemTemplate="{StaticResource ContactListViewTemplate2}"
                BorderThickness="1"
                BorderBrush="DimGray"
                MinWidth="550" 
                Height="400"/>
            </StackPanel>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;ListView
    x:Name="BaseExample"
    ItemsSource="{x:Bind ContactsList}"
    ItemTemplate="{StaticResource ContactListViewTemplate}"
    BorderThickness="1"
    BorderBrush="DimGray"
    MinWidth="550" 
    Height="400"/&gt;
                    
 &lt;DataTemplate x:Key="ContactListViewTemplate" x:DataType="local1:Contact"&gt;
     &lt;TextBlock Text="{x:Bind Name}" x:Phase="1" Margin="0,5,0,5"/&gt;
&lt;/DataTemplate&gt;
                    
&lt;!-- In this example, the ListView's ItemTemplate property is bound to a data template (shown above)
called ContactListViewTemplate, defined in a Page.Resources section. 
                    
The data template is defined to display a Contact object (class defined in C# code-behind), and the text displayed is
bound to the Contact object's Name attribute.
                    
The ItemsSource for the ListView is a collection called Contacts List and is defined in the C# code-behind, but can be 
defined as a XAML property as well. --&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution Key="SelectionMode" Value="{x:Bind BaseExample.SelectionMode, Mode=OneWay}"/>
            </local:ControlExample.Substitutions>
        </local:ControlExample>

        <!--<local:ControlExample HeaderText="A Simple ListView with Selection support">
            <ListView
                x:Name="Control2"
                CanDragItems="True"
                CanReorderItems="True"
                AllowDrop="True"
                BorderThickness="1"
                BorderBrush="DimGray"
                MinWidth="550" 
                Height="400"/>
            <local:ControlExample.Options>
                <StackPanel>
                    <ComboBox SelectionChanged="SelectionModeComboBox_SelectionChanged" Header="SelectionMode"
                        SelectedIndex="1" Margin="0,12,0,0">
                        <x:String>None</x:String>
                        <x:String>Single</x:String>
                        <x:String>Multiple</x:String>
                        <x:String>Extended</x:String>
                    </ComboBox>
                </StackPanel>
            </local:ControlExample.Options>

            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;! The following properties should be added to the ListView definition to build this sample. &gt;
                        
&lt;ListView CanDragItems="True" CanReorderItems="True" AllowDrop="True"
    SelectionMode="$(SelectionMode)" /&gt;

&lt;DataTemplate x:Key="ContactListViewTemplate" x:DataType="local1:Contact">
    &lt;Grid&gt;
        &lt;Grid.RowDefinitions&gt;
            &lt;RowDefinition Height="*"/&gt;
            &lt;RowDefinition Height="*"/&gt;
        &lt;/Grid.RowDefinitions&gt;
        &lt;Grid.ColumnDefinitions&gt;
            &lt;ColumnDefinition Width="Auto"/&gt;
            &lt;ColumnDefinition Width="*"/&gt;
        &lt;/Grid.ColumnDefinitions&gt;
        &lt;Ellipse x:Name="Ellipse"
                    Grid.RowSpan="2"
                    Width ="32"
                    Height="32"
                    Margin="6"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Fill="Gray"/&gt;
        &lt;TextBlock Grid.Column="1"
                    Text="{x:Bind Name}"
                    x:Phase="1"
                    Style="{ThemeResource BaseTextBlockStyle}"
                    Margin="12,6,0,0"/&gt;
        &lt;TextBlock  Grid.Column="1"
                    Grid.Row="1"
                    Text="{x:Bind Company}"
                    x:Phase="2"
                    Style="{ThemeResource BodyTextBlockStyle}"
                    Margin="12,0,0,6"/&gt;
    &lt;/Grid>
&lt;/DataTemplate&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution Key="SelectionMode" Value="{x:Bind Control2.SelectionMode, Mode=OneWay}"/>
            </local:ControlExample.Substitutions>
        </local:ControlExample>-->



        <local:ControlExample HeaderText="A ListView with Grouped Headers" XamlSource="ListView\ListViewGroupedHeaderSample_xaml.txt">
            <ListView 
                ItemsSource="{x:Bind ContactsCVS.View, Mode=OneWay}"
                ItemTemplate="{StaticResource ContactListViewTemplate}"
                SelectionMode="Single"
                ShowsScrollingPlaceholders="True"
                Height="400"
                MinWidth="550"
                BorderThickness="1"
                BorderBrush="DimGray">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel AreStickyGroupHeadersEnabled="False" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>

                <ListView.GroupStyle>
                    <GroupStyle >
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate x:DataType="local1:GroupInfoList">
                                <TextBlock Text="{x:Bind Key}"
                                       Style="{ThemeResource TitleTextBlockStyle}"/>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>

            
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;CollectionViewSource x:Name="ContactsCVS" IsSourceGrouped="True"/&gt;

&lt;ListView ItemsSource="{x:Bind Contacts}"&gt;
    &lt;ListView.ItemsPanel&gt;
        &lt;ItemsPanelTemplate&gt;
            &lt;ItemsStackPanel AreStickyGroupHeadersEnabled="False"/&gt;
        &lt;/ItemsPanelTemplate&gt;
    &lt;/ListView.ItemsPanel&gt;
&lt;/ListView&gt;
                </x:String>
            </local:ControlExample.Xaml>
            
        </local:ControlExample>

        <local:ControlExample HeaderText="A ListView with Grouped Sticky Headers" XamlSource="ListView\ListViewStickyHeaderSample_xaml.txt">
            <ListView 
                ItemsSource="{x:Bind ContactsCVS.View, Mode=OneWay}"
                ItemTemplate="{StaticResource ContactListViewTemplate}"
                SelectionMode="Single"
                ShowsScrollingPlaceholders="True"
                Height="400" 
                MinWidth="550"
                BorderThickness="1"
                BorderBrush="DimGray">
                <ListView.GroupStyle>
                    <GroupStyle >
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate x:DataType="local1:GroupInfoList">
                                <Border AutomationProperties.Name="{x:Bind Key}">
                                    <TextBlock Text="{x:Bind Key}" Style="{ThemeResource TitleTextBlockStyle}"/>
                                </Border>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>

            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;CollectionViewSource x:Name="ContactsCVS" IsSourceGrouped="True"/&gt;

&lt;ListView ItemsSource="{x:Bind Contacts}"&gt;
    &lt;ListView.ItemsPanel&gt;
        &lt;ItemsPanelTemplate&gt;
            &lt;ItemsStackPanel AreStickyGroupHeadersEnabled="True"/&gt;
        &lt;/ItemsPanelTemplate &gt;
    &lt;/ListView.ItemsPanel&gt;
&lt;/ListView&gt;
                </x:String>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <local:ControlExample HeaderText="A ListView with Images">
            <ListView x:Name="Control4"
                      CanDragItems="True"
                      CanReorderItems="True"
                      CanDrag="True"
                      AllowDrop="True"
                      Height="400"
                      MinWidth="550"
                      BorderThickness="1"
                      BorderBrush="DimGray">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="local1:CustomDataObject">
                        <Grid Margin="0,12,0,12" AutomationProperties.Name="{x:Bind Title}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="150"/>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image Source="{x:Bind ImageLocation}" MaxHeight="100" Stretch="Fill"/>

                                <StackPanel Margin="12,0,0,0" Grid.Column="1" >
                                    <TextBlock Text="{x:Bind Title}" FontFamily="Segoe UI" FontSize="14" FontWeight="SemiBold" Style="{ThemeResource BaseTextBlockStyle}" HorizontalAlignment="Left" Margin="0,0,0,6" LineHeight="20"/>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{x:Bind Description}" FontFamily="Segoe UI" FontWeight="Normal" LineHeight="20" Style="{ThemeResource BodyTextBlockStyle}" TextTrimming="CharacterEllipsis" Width="350" MaxLines="1"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{x:Bind Views}" FontFamily="Segoe UI" FontSize="12" FontWeight="Normal" HorizontalAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}" Margin="0,0,0,0"/>
                                        <TextBlock Text=" Views " FontFamily="Segoe UI" FontSize="12" FontWeight="Normal" HorizontalAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}"/>
                                        <TextBlock Text=" &#x22C5; " FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" HorizontalAlignment="Left"/>
                                        <TextBlock Text="{x:Bind Likes}" FontFamily="Segoe UI" FontSize="12" FontWeight="Normal" HorizontalAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}" Margin="5,0,0,0"/>
                                        <TextBlock Text=" Likes" FontFamily="Segoe UI" FontSize="12" FontWeight="Normal" HorizontalAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

            <local:ControlExample.Xaml>
                <x:String>Refer to the DataTemplate on the ListViewPage.xaml page to get this visual of Images in a list.</x:String>
            </local:ControlExample.Xaml>
        </local:ControlExample>
    </StackPanel>
</local:ItemsPageBase>

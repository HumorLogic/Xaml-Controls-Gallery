<!-- XAML Code -->

<!-- This is the ItemsRepeater used in this example: -->
<ItemsRepeater x:Name="repeater0" 
               Margin="0,0,12,0"
               HorizontalAlignment="Stretch"
               ItemTemplate="{StaticResource StringOrIntTemplateSelector}"
               ItemsSource="{x:Bind StringsAndInts}">

<!-- The ItemsSource is bound in the C# code-behind to an ObservableCollection called 
StringsAndInts.StringsAndInts has both string objects and integer objects. The ItemTemplate
is a DataTemplateSelector called StringOrIntTemplateSelector, and is defined in the 
code-behind and shown in the C# code-behind section below. -->
                        
<!-- StringOrIntTemplateSelector assesses the type of an item, and returns StringDataTemplate if 
the item is a string, and IntDataTemplate if the item is an integer (see C# code-behind below). 
The XAML code directly below binds the DataTemplateSelector to those two data templates, and 
defines each of them: -->
                        
<StringOrIntTemplateSelector x:Key="StringOrIntTemplateSelector"
                             StringTemplate="{StaticResource StringDataTemplate}"
                             IntTemplate="{StaticResource IntDataTemplate}"/>         
                        
<DataTemplate x:Key="StringDataTemplate" x:DataType="x:String">
    <Grid Background="Black" Margin="10">
        <TextBlock Padding="10" Text="{x:Bind}" Foreground="White" HorizontalAlignment="Center" 
                   TextWrapping="Wrap" VerticalAlignment="Center"></TextBlock>
    </Grid>
</DataTemplate>

<DataTemplate x:Key="IntDataTemplate" x:DataType="x:Int32">
    <Grid Width="100" Height="100" Margin="10">
        <TextBlock Padding="10" Text="{x:Bind}" FontSize="50" HorizontalAlignment="Center" 
                   VerticalAlignment="Center"></TextBlock>
    </Grid>
</DataTemplate>
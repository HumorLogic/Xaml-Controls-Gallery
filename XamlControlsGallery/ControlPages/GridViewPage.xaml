<!--
    //*********************************************************
    //
    // Copyright (c) Microsoft. All rights reserved.
    // THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
    // ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
    // IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
    // PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
    //
    //*********************************************************
-->
<local:ItemsPageBase
    x:Class="AppUIBasics.ControlPages.GridViewPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppUIBasics"
    xmlns:local1="using:AppUIBasics.ControlPages"
    xmlns:sys="using:System">

    <Page.Resources>
        <DataTemplate x:Key="ImageTemplate" x:DataType="local1:CustomDataObject">
            <Image Stretch="UniformToFill" Source="{x:Bind ImageLocation}" AutomationProperties.Name="{x:Bind Title}" Width="190" Height="130" AutomationProperties.AccessibilityView="Raw" />
        </DataTemplate>

        <DataTemplate x:Key="IconTextTemplate" x:DataType="local1:CustomDataObject">
            <RelativePanel AutomationProperties.Name="{x:Bind Title}" Width="280" MinHeight="160">
                <Image x:Name="image"
                    Width="18"
                    Margin="0,4,0,0"
                    RelativePanel.AlignLeftWithPanel="True"
                    RelativePanel.AlignTopWithPanel="True"
                    Source="{x:Bind ImageLocation}"
                    Stretch="Uniform" />
                <TextBlock x:Name="title" Style="{StaticResource BaseTextBlockStyle}" Margin="8,0,0,0" Text="{x:Bind Title}" 
                    RelativePanel.RightOf="image" RelativePanel.AlignTopWithPanel="True"/>
                <TextBlock Text="{x:Bind Description}" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="Wrap" Margin="0,4,8,0" 
                           RelativePanel.Below="title" TextTrimming="WordEllipsis"/>
            </RelativePanel>
        </DataTemplate>

        <DataTemplate x:Key="ImageTextTemplate" x:DataType="local1:CustomDataObject">
            <Grid AutomationProperties.Name="{x:Bind Title}" Width="280">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image Source="{x:Bind ImageLocation}" Height="100" Stretch="Fill" VerticalAlignment="Top"/>
                <StackPanel Grid.Column="1" Margin="8,0,0,8">
                    <TextBlock Text="{x:Bind Title}" Style="{ThemeResource SubtitleTextBlockStyle}" Margin="0,0,0,8"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{x:Bind Views}" Style="{ThemeResource CaptionTextBlockStyle}"/>
                        <TextBlock Text=" Views " Style="{ThemeResource CaptionTextBlockStyle}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{x:Bind Likes}" Style="{ThemeResource CaptionTextBlockStyle}" />
                        <TextBlock Text=" Likes" Style="{ThemeResource CaptionTextBlockStyle}"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="StyledGridTemplate" x:DataType="local1:ImageWithBackground">
            <Image Source="{x:Bind ImageSrc}" Stretch="Fill" VerticalAlignment="Center" Height="100" Width="100" Margin="30"></Image>
        </DataTemplate>

        <DataTemplate x:Key="TextTemplate" x:DataType="local1:CustomDataObject">
            <StackPanel Width="240" Orientation="Horizontal">
                <TextBlock Style="{StaticResource TitleTextBlockStyle}" Margin="8,0,0,0" Text="{x:Bind Title}" />
            </StackPanel>
        </DataTemplate>

        <Flyout x:Key="ColorPickerFlyout">
            <StackPanel>
                <ColorPicker x:Name="StyledGridColorPicker"
                         IsColorChannelTextInputVisible="False"
                         IsColorPreviewVisible="True"
                         IsHexInputVisible="False"/>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                        <ColumnDefinition Width="1*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Content="OK" Padding="10" Click="StyledGrid_ColorChanged" VerticalAlignment="Center" HorizontalAlignment="Center"></Button>
                    <Button Grid.Column="1" Content="Cancel" Padding="10" Click="StyledGrid_ColorCancel" VerticalAlignment="Center" HorizontalAlignment="Center"></Button>
                </Grid>

            </StackPanel>
        </Flyout>
    </Page.Resources>

    <StackPanel>
        <local:ControlExample HeaderText="Basic GridView with Simple DataTemplate">
            <StackPanel>
                <TextBlock Margin="0 0 0 15">
                    This is a basic GridView that has the full source code below. <LineBreak/>Other samples on this page display only the additional markup needed to customize the specific GridView.
                </TextBlock>
                <GridView
                    x:Name="Control0"
                    ItemTemplate="{StaticResource ImageTemplate}"
                    IsItemClickEnabled="True"
                    ItemClick="Control0_ItemClick"
                    SelectionMode="Single"/>

                <TextBlock x:Name="ClickOutput0" Style="{StaticResource OutputTextBlockStyle}" />
            </StackPanel>

            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;GridView
    x:Name="Control0"
    ItemTemplate="{StaticResource ImageTemplate}"
    ItemsSource="{x:Bind Items}"
    IsItemClickEnabled="True"
    ItemClick="Control0_ItemClick"
    SelectionMode="Single"/&gt;
                    
 &lt;DataTemplate x:Key="ImageTemplate" x:DataType="local1:CustomDataObject"&gt;
     &lt;Image Stretch="UniformToFill" Source="{x:Bind ImageLocation}" Width="190" Height="130"&gt;
&lt;/DataTemplate&gt;
                    
&lt;!-- In this example, the ListView's ItemTemplate property is bound to a data template (shown above)
called ImageTemplate, defined in the Page.Resources section of the XAML file. 
                    
The data template is defined to display a CustomDataObject object (class defined in C# code-behind),
and the source of the image displayed is bound to the CustomDataObject object's ImageLocation attribute.
                    
The ItemsSource for the ListView is an ObservableCollection&lt;CustomDataObject&gt; called Items and
is defined in the C# code-behind, but can be defined as a XAML property as well. 
                    
The IsItemClickEnabled property allows items to be clicked, and a function called Control0_ItemClick 
is called when an item is clicked. This function is defined in the C# code-behind and simply outputs 
the title of the selected item into a TextBlock below the GridView. --&gt;
                </x:String>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <local:ControlExample HeaderText="GridView with Style Customization">
            <StackPanel>
                <TextBlock TextWrapping="Wrap" Margin="0 0 0 15">
                    Use the options on the right to control different styling customizations to the GridView below.
                </TextBlock>
                <GridView
                    x:Name="StyledGrid"
                    ItemTemplate="{StaticResource StyledGridTemplate}">

                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter x:Name="BgSetter" Property="Background" Value="White"/>
                            <Setter Property="Margin" Value="5"/>
                            <Setter Property="Opacity" Value="1"/>
                        </Style>
                    </GridView.ItemContainerStyle>
                </GridView>
            </StackPanel>

            <local:ControlExample.Options>
                <StackPanel>
                    <Button x:Name="ColorPickerButton" Width="150" Flyout="{StaticResource ColorPickerFlyout}" Margin="0 20 0 0">
                        <TextBlock TextWrapping="Wrap" Text="Select Item Background Color"></TextBlock>
                    </Button>

                    <Slider x:Name="OpacitySlider" Header="Background Opacity" Width="150" ValueChanged="StyledGrid_OpacityChanged"  
                            Minimum="0" Maximum="1" StepFrequency="0.1" Margin="0 20 0 0" />

                    <CheckBox Margin="0 15 0 0" x:Name="GradientCheckbox" Content="Gradient Background" Click="StyledGrid_GradientApply"></CheckBox>

                    <Grid HorizontalAlignment="Left" Margin="0 20 0 0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBox Header="Space Between Columns" Grid.Column ="0" Width="100" x:Name="ColSpace" PlaceholderText="{x:Bind ActualColSpace, Mode=TwoWay}"  Margin=" 0 0 5 10"
                                 KeyDown="StyledGrid_ChangeCol"/>
                        <Button x:Name="IncColSpace" Grid.Column="1" Content="+" FontSize="15" Click="StyledGrid_IncreaseColSpace" Margin=" 0 0 0 10" VerticalAlignment="Bottom"></Button>
                    </Grid>

                    <Grid HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBox Header="Space Between Rows" Grid.Column="0" Width="100" x:Name="RowSpace" PlaceholderText="{x:Bind ActualRowSpace, Mode=TwoWay}"  Margin=" 0 0 5 10" 
                                 KeyDown="StyledGrid_ChangeRow"/>
                        <Button x:Name="IncRowSpace" Grid.Column="1" Content="+" FontSize="15" Click="StyledGrid_IncreaseRowSpace" Margin=" 0 0 0 10" VerticalAlignment="Bottom"></Button>
                    </Grid>

                </StackPanel>
            </local:ControlExample.Options>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;!-- The GridView used for this example is shown below. Setter properties are used to customize 
some parts of the GridViewItems. --&gt;
&lt;GridView
    x:Name="StyledGrid"
    ItemTemplate="{StaticResource StyledGridTemplate}"&gt;

    &lt;GridView.ItemContainerStyle&gt;
        &lt;Style TargetType="GridViewItem"&gt;
            &lt;Setter Property="Background" Value="$(Background)"/&gt;
            &lt;Setter Property="Margin" Value="$(ColMargin) $(RowMargin) $(ColMargin) $(RowMargin)"/&gt;
            &lt;Setter Property="Opacity" Value="$(Opacity)"/&gt;
        &lt;/Style&gt;
    &lt;/GridView.ItemContainerStyle&gt;
&lt;/GridView&gt;      
                    
&lt;!-- In this example, the ListView's ItemTemplate property is bound to a data template (shown below)
called StyledGridTemplate, defined in the Page.Resources section of the XAML file. 
                    
The data template is defined to display a ImageWithBackground object (class defined in C# code-behind), 
and the image displayed has its source defined in the ImageSrc attribute, which the Image Source 
property below is bound to. --&gt;
                    
&lt;DataTemplate x:Key="StyledGridTemplate" x:DataType="local1:ImageWithBackground"&gt;
        &lt;Image Source="{x:Bind ImageSrc}" Stretch="Fill" VerticalAlignment="Center"
                  Height="100" Width="100" Margin="30"&gt;&lt;/Image&gt;
&lt;/DataTemplate&gt;

&lt;!-- The gradient was applied by changing the background of each GridViewItem to use a 
LinearGradientBrush. See the source code of this application for more details. --&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution Key="Background" Value="{x:Bind StyledGridColorPicker.Color, Mode=OneWay}"/>
                <local:ControlExampleSubstitution Key="Opacity" Value="{x:Bind sys:String.Format('{0:0.00}', OpacitySlider.Value), Mode=OneWay}"/>
                <local:ControlExampleSubstitution Key="Gradient" Value="{x:Bind GradientCheckbox.IsChecked, Mode=OneWay}"/>
                <local:ControlExampleSubstitution Key="ColMargin" Value="{x:Bind ColSpace.PlaceholderText, Mode=OneWay}"/>
                <local:ControlExampleSubstitution Key="RowMargin" Value="{x:Bind RowSpace.PlaceholderText, Mode=OneWay}"/>
            </local:ControlExample.Substitutions>
        </local:ControlExample>

        <local:ControlExample x:Name="Example1" HeaderText="Content inside of a GridView.">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <GridView
                    x:Name="Control1"
                    CanDragItems="{x:Bind DragCheckBox.IsChecked.Value, Mode=OneWay}"
                    CanReorderItems="{x:Bind ReorderCheckBox.IsChecked.Value, Mode=OneWay}"
                    AllowDrop="{x:Bind DropCheckBox.IsChecked.Value, Mode=OneWay}"
                    IsItemClickEnabled="{x:Bind ItemClickCheckBox.IsChecked.Value, Mode=OneWay}"
                    ItemClick="Control1_ItemClick"
                    ItemTemplate="{StaticResource ImageTemplate}"                    
                    SelectionChanged="Control1_SelectionChanged" />

                <StackPanel Grid.Row="1">
                    <TextBlock x:Name="ClickOutput" Style="{StaticResource OutputTextBlockStyle}" />
                    <TextBlock x:Name="SelectionOutput" Style="{StaticResource OutputTextBlockStyle}" />
                </StackPanel>
            </Grid>
            <local:ControlExample.Options>
                <StackPanel x:Name="Control2">
                    <StackPanel>
                        <TextBlock Margin="0,0,0,10" Text="ItemTemplate" />
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Image"
                            GroupName="Template"
                            IsChecked="True"
                            Tag="ImageTemplate" />
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Icon/Text"
                            GroupName="Template"
                            Tag="IconTextTemplate" />
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Image/Text"
                            GroupName="Template"
                            Tag="ImageTextTemplate" />
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Text"
                            GroupName="Template"
                            Tag="TextTemplate" />
                        <ToggleButton Margin="0,8,0,0" Click="FlowDirectionCheckBox_Click" Content="Reverse FlowDirection" />
                        <TextBlock Margin="0,18,0,10" Text="GridView Properties" />
                        <TextBlock TextWrapping="Wrap" FontSize="13" MaxWidth="150"> In order to drag, drop, and reorder items within the GridView, make sure all boxes are checked below.</TextBlock>
                        <CheckBox x:Name="ItemClickCheckBox" Click="ItemClickCheckBox_Click" Content="IsItemClickEnabled" />
                        <CheckBox x:Name="DragCheckBox" Content="CanDragItems" />
                        <CheckBox x:Name="ReorderCheckBox" Content="CanReorderItems" />
                        <CheckBox x:Name="DropCheckBox" Content="AllowDrop" />
                        <ComboBox
                            Margin="0,12,0,0"
                            Header="SelectionMode"
                            SelectedIndex="1"
                            SelectionChanged="SelectionModeComboBox_SelectionChanged">
                            <x:String>None</x:String>
                            <x:String>Single</x:String>
                            <x:String>Multiple</x:String>
                            <x:String>Extended</x:String>
                        </ComboBox>
                    </StackPanel>
                </StackPanel>
            </local:ControlExample.Options>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;GridView ItemsSource="{x:Bind Items}"
          ItemTemplate="{StaticResource $(ItemTemplate)}"
          IsItemClickEnabled="$(IsItemClickEnabled)"
          CanDragItems="$(CanDragItems)"
          AllowDrop="$(CanDropItems)"
          CanReorderItems="$(CanReorderItems)"
          SelectionMode="$(SelectionMode)"
          SelectionChanged="Control1_SelectionChanged"
          ItemClick="Control1_ItemClick" /&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution x:Name="itemTemplate" Key="ItemTemplate" Value="ImageTemplate" />
                <local:ControlExampleSubstitution Key="IsItemClickEnabled" Value="{x:Bind Control1.IsItemClickEnabled, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="CanDragItems" Value="{x:Bind Control1.CanDragItems, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="CanDropItems" Value="{x:Bind Control1.AllowDrop, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="CanReorderItems" Value="{x:Bind Control1.CanReorderItems, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="SelectionMode" Value="{x:Bind Control1.SelectionMode, Mode=OneWay}" />
            </local:ControlExample.Substitutions>
        </local:ControlExample>
    </StackPanel>
</local:ItemsPageBase>
